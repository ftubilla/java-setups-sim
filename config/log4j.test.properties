# Root logger option
log4j.rootLogger=TRACE, file
 
# Establish specific log levels here
#log4j.logger.policies=TRACE
#log4j.logger.discreteEvent.Changeover=TRACE
#log4j.logger.system.Machine=TRACE
#log4j.logger.discreteEvent.Schedule=TRACE
#log4j.logger.discreteEvent.MasterScheduler=TRACE
#log4j.logger.sim.Sim=TRACE
#log4j.logger.sim.SimRun=TRACE
#log4j.logger.policies.RoundRobinPolicy=TRACE
#log4j.logger.metrics.TimeFractionsMetrics=TRACE
log4j.logger.sequences=TRACE
log4j.logger.optimization.OptimizationProblem=TRACE
log4j.logger.policies.tuning=TRACE
log4j.logger.policies.GallegoRecoveryPolicy=TRACE
log4j.logger.policies.HedgingZonePolicyWithPRA=TRACE
log4j.logger.lowerbounds=TRACE
 
# Direct log messages to a log file
log4j.appender.file=org.apache.log4j.RollingFileAppender
log4j.appender.file.File=logs/sim_test.log
log4j.appender.file.append=false
log4j.appender.file.MaxFileSize=1GB
log4j.appender.file.MaxBackupIndex=1
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=%r [%t] %5p %c{1}:%L - %m%n
 
# Direct log messages to stdout
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%r [%t] %5p %c{1}:%L - %m%n